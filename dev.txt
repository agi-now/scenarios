


	DESIGN ENVIRONMENT
TASK 1: Add components
 - Buttons
 - Levers
 - LEDs
 - Logic gates
 - Displays
 - Counters
 - Clocks

TASK 2: Decide on the nature/specifications of this ENV, how are we going to do it?
...


	DESIGN SCENARIOS
TASK 3: Design complex scenarios

        AGENT
 - Analyze complex circuits
 - Infere the behaviour of components
 - Infere the behaviour of circuits
 - Create your own circuits # Maybe not this one

        S C E N A R I O S
=========================

::: Button - LED

=========================

::: Lever - LED
:::
::: (This two seem simple but a deep understading of their nature is key so it is truly intelligent)

=========================

::: Lever   - | AND gate | - LED
::: Button - |                   |
:::
::: (You can only interact with one at a time)

=========================

::: Button - | AND gate | - LED
::: Button - |                   |
:::
::: (You can only interact with one at a time)
::: (One button has a timer, just enough time to click the other one)

=========================

:::         PASSWORD
:::
::: Lever --|      |
::: Lever !-|      |
::: Lever !-| or | !- LED
::: Lever --|      |
::: Lever !-|      |

=========================

:::         MYSTERIOUS BOX
:::
::: Lever, Button, LED
:::
::: ------Under the hood--------
:::
::: Memory circuit where:
::: Lever = Data
::: Button = Set
::: LED = Memory value

=========================

:::         EXAM TIME
:::
::: Agent, answer the following questions, (We can propose infinite of these to test his knowledge)
:::
::: Per each pressing of a button; Is a release always going to follow?
::: Is it up to you the time between pressing and releasing of a btn? (In MC, no. In this scenario, I hope yes)
::: Could you make a lever behave like a button?
::: Could you make a button behave like a lever?

=========================

:::         OSCILATING LED
:::
::: We have an LED that turns on and off every second
::: There's a green LED and a red LED
::: There's a button
::: 
::: When the LED is ON and the button is clicked, green LED lights up
::: When the LED is OFF and the button is clicked, red LED lights up
:::
::: (The goal can be set to any combination of expected outputs like: Only green, only red, both, neither)
:::
::: In this scenario the agent will
::: - Predict and understand the temporal nature of this scenario
::: - Create plans as to what to do in this situation
::: - Practice feedback and adjustments to accomplish the task

=========================

Tasks can be categorized in different types and requirements, for instance, the last one seems like it could only be solved with time understanding. Thinking about how the agent could achieve such understanding, all I could think off is --Manage a timeline--, Doesn't have to be to crazy, it will detect events happening periodically and make predictions automatically, and it will mainly focus on --Time sequences--. 
Based on that it will understand the nature of buttons, levers, oscilating scenarios, sequences, etc.

Here are some examples of how things might look:

	LEVER
[Activated]-------------[Deactivated]-------.....

	BUTTON
[Pressed]=========[Unpressed]-----....
As you see this one presents a nature of events linked temporaly

	OSCILATING LED
[ON]->[___ON STATE___]->[OFF]->[___OFF STATE___]->[ON]->...
This one makes you understand that after an event x we enter an x state, makes sense, when you turn a LED on, it stays in an on state.
Understanding this zones of time help you plan when you should time your actions.

We might or might not continue developing time capacities.

For the other hand, at least to a certain extent I really don't think space capacities are thaaaat complex, just add a spatial field and make conditional conections.
Like, you can only interact with a button if you're next to it.
This wouldn't only make it understand that it has to be next to something to interact with it (more realistic) but also solve some reasonings like, why you can't press two things at the same time. This would also help working on ACT SOLIDIFICATION capacities of the agent and start to work on it having a body (Doesn't mean that we'll worry about a robotic body, but that sometimes there's layers between the agent's mind and the ENV like when you play MC)

	SPEECH TO ENV/SCE EDITION
TASK 4: Propose texts that should be processed
I think this one can be done after we are done with the previous tasks, after we decide on what ENV we'll manage and what Scenarios will be selected we can just think about how will the agent update his WM.ENV (The general rules of the circuit language) and WM.SCE (The specifications of a given scenario)




